// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.23.3
// source: api/proto/camila.proto

package camila

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	CamilaService_GetAdminIndex_FullMethodName               = "/camila.camilaService/GetAdminIndex"
	CamilaService_GetAdminBigData_FullMethodName             = "/camila.camilaService/GetAdminBigData"
	CamilaService_GetOptReportChange_FullMethodName          = "/camila.camilaService/GetOptReportChange"
	CamilaService_GetOptReportAgentChange_FullMethodName     = "/camila.camilaService/GetOptReportAgentChange"
	CamilaService_GetOptReportMerchantChange_FullMethodName  = "/camila.camilaService/GetOptReportMerchantChange"
	CamilaService_GetOptReportBeeChange_FullMethodName       = "/camila.camilaService/GetOptReportBeeChange"
	CamilaService_GetOptReportBalance_FullMethodName         = "/camila.camilaService/GetOptReportBalance"
	CamilaService_GetOptReportResultBee_FullMethodName       = "/camila.camilaService/GetOptReportResultBee"
	CamilaService_GetOptReportBeeNoPay_FullMethodName        = "/camila.camilaService/GetOptReportBeeNoPay"
	CamilaService_GetOptReportAgent_FullMethodName           = "/camila.camilaService/GetOptReportAgent"
	CamilaService_GetOptReportAgentMer_FullMethodName        = "/camila.camilaService/GetOptReportAgentMer"
	CamilaService_GetOptReportMerchant_FullMethodName        = "/camila.camilaService/GetOptReportMerchant"
	CamilaService_GetOptReportMerchantPayment_FullMethodName = "/camila.camilaService/GetOptReportMerchantPayment"
	CamilaService_GetOptReportProfit_FullMethodName          = "/camila.camilaService/GetOptReportProfit"
	CamilaService_GetOptReportCustomer_FullMethodName        = "/camila.camilaService/GetOptReportCustomer"
	CamilaService_GetOptReportPayment_FullMethodName         = "/camila.camilaService/GetOptReportPayment"
	CamilaService_GetOptReportView_FullMethodName            = "/camila.camilaService/GetOptReportView"
	CamilaService_GetOptOrderBalanceList_FullMethodName      = "/camila.camilaService/GetOptOrderBalanceList"
	CamilaService_GetOptOrderManualList_FullMethodName       = "/camila.camilaService/GetOptOrderManualList"
	CamilaService_GetOptOrderReplenishList_FullMethodName    = "/camila.camilaService/GetOptOrderReplenishList"
	CamilaService_GetOptOrderReplenishData_FullMethodName    = "/camila.camilaService/GetOptOrderReplenishData"
	CamilaService_GetOptOrderColList_FullMethodName          = "/camila.camilaService/GetOptOrderColList"
	CamilaService_GetOptOrderColData_FullMethodName          = "/camila.camilaService/GetOptOrderColData"
	CamilaService_GetOptOrderPayList_FullMethodName          = "/camila.camilaService/GetOptOrderPayList"
	CamilaService_GetOptOrderPayData_FullMethodName          = "/camila.camilaService/GetOptOrderPayData"
	CamilaService_GetAgReportChange_FullMethodName           = "/camila.camilaService/GetAgReportChange"
	CamilaService_GetAgReportResult_FullMethodName           = "/camila.camilaService/GetAgReportResult"
	CamilaService_GetAgOrderBalanceList_FullMethodName       = "/camila.camilaService/GetAgOrderBalanceList"
	CamilaService_GetAgOrderCashList_FullMethodName          = "/camila.camilaService/GetAgOrderCashList"
	CamilaService_GetAgOrderCashData_FullMethodName          = "/camila.camilaService/GetAgOrderCashData"
	CamilaService_GetMerReportChange_FullMethodName          = "/camila.camilaService/GetMerReportChange"
	CamilaService_GetMerReportResult_FullMethodName          = "/camila.camilaService/GetMerReportResult"
	CamilaService_GetMerOrderBalanceList_FullMethodName      = "/camila.camilaService/GetMerOrderBalanceList"
	CamilaService_GetMerOrderColList_FullMethodName          = "/camila.camilaService/GetMerOrderColList"
	CamilaService_GetMerOrderColData_FullMethodName          = "/camila.camilaService/GetMerOrderColData"
	CamilaService_GetMerOrderPayList_FullMethodName          = "/camila.camilaService/GetMerOrderPayList"
	CamilaService_GetMerOrderPayData_FullMethodName          = "/camila.camilaService/GetMerOrderPayData"
	CamilaService_GetBeeReportChange_FullMethodName          = "/camila.camilaService/GetBeeReportChange"
	CamilaService_GetBeeReportChangeDetail_FullMethodName    = "/camila.camilaService/GetBeeReportChangeDetail"
	CamilaService_GetBeeOrderBalanceList_FullMethodName      = "/camila.camilaService/GetBeeOrderBalanceList"
	CamilaService_GetBeeOrderInList_FullMethodName           = "/camila.camilaService/GetBeeOrderInList"
	CamilaService_GetBeeOrderInData_FullMethodName           = "/camila.camilaService/GetBeeOrderInData"
	CamilaService_GetBeeOrderOutList_FullMethodName          = "/camila.camilaService/GetBeeOrderOutList"
	CamilaService_GetBeeOrderOutData_FullMethodName          = "/camila.camilaService/GetBeeOrderOutData"
	CamilaService_GetBeeOrderLatelyList_FullMethodName       = "/camila.camilaService/GetBeeOrderLatelyList"
	CamilaService_GetBeeOrderList_FullMethodName             = "/camila.camilaService/GetBeeOrderList"
	CamilaService_Cron_FullMethodName                        = "/camila.camilaService/Cron"
)

// CamilaServiceClient is the client API for CamilaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CamilaServiceClient interface {
	// 總控後台
	GetAdminIndex(ctx context.Context, in *GetAdminIndexRequest, opts ...grpc.CallOption) (*GetAdminIndexResponse, error)
	GetAdminBigData(ctx context.Context, in *GetAdminBigDataRequest, opts ...grpc.CallOption) (*GetAdminBigDataResponse, error)
	// ==================== 運營員後台功能 ====================
	// 報表
	// < 即時更新 >
	GetOptReportChange(ctx context.Context, in *GetOptReportChangeRequest, opts ...grpc.CallOption) (*GetOptReportChangeResponse, error)
	GetOptReportAgentChange(ctx context.Context, in *GetOptReportAgentChangeRequest, opts ...grpc.CallOption) (*GetOptReportAgentChangeResponse, error)
	GetOptReportMerchantChange(ctx context.Context, in *GetOptReportMerchantChangeRequest, opts ...grpc.CallOption) (*GetOptReportMerchantChangeResponse, error)
	GetOptReportBeeChange(ctx context.Context, in *GetOptReportBeeChangeRequest, opts ...grpc.CallOption) (*GetOptReportBeeChangeResponse, error)
	GetOptReportBalance(ctx context.Context, in *GetOptReportBalanceRequest, opts ...grpc.CallOption) (*GetOptReportBalanceResponse, error)
	GetOptReportResultBee(ctx context.Context, in *GetOptReportResultBeeRequest, opts ...grpc.CallOption) (*GetOptReportResultBeeResponse, error)
	GetOptReportBeeNoPay(ctx context.Context, in *GetOptReportBeeNoPayRequest, opts ...grpc.CallOption) (*GetOptReportBeeNoPayResponse, error)
	// < 過帳更新 >
	GetOptReportAgent(ctx context.Context, in *GetOptReportAgentRequest, opts ...grpc.CallOption) (*GetOptReportAgentResponse, error)
	GetOptReportAgentMer(ctx context.Context, in *GetOptReportAgentMerRequest, opts ...grpc.CallOption) (*GetOptReportAgentMerResponse, error)
	GetOptReportMerchant(ctx context.Context, in *GetOptReportMerchantRequest, opts ...grpc.CallOption) (*GetOptReportMerchantResponse, error)
	GetOptReportMerchantPayment(ctx context.Context, in *GetOptReportMerchantPaymentRequest, opts ...grpc.CallOption) (*GetOptReportMerchantPaymentResponse, error)
	// 蜜蜂報表
	GetOptReportProfit(ctx context.Context, in *GetOptReportProfitRequest, opts ...grpc.CallOption) (*GetOptReportProfitResponse, error)
	GetOptReportCustomer(ctx context.Context, in *GetOptReportCustomerRequest, opts ...grpc.CallOption) (*GetOptReportCustomerResponse, error)
	GetOptReportPayment(ctx context.Context, in *GetOptReportPaymentRequest, opts ...grpc.CallOption) (*GetOptReportPaymentResponse, error)
	GetOptReportView(ctx context.Context, in *GetOptReportViewRequest, opts ...grpc.CallOption) (*GetOptReportViewResponse, error)
	// 訂單
	GetOptOrderBalanceList(ctx context.Context, in *GetOptOrderBalanceListRequest, opts ...grpc.CallOption) (*GetOptOrderBalanceListResponse, error)
	GetOptOrderManualList(ctx context.Context, in *GetOptOrderManualListRequest, opts ...grpc.CallOption) (*GetOptOrderManualListResponse, error)
	GetOptOrderReplenishList(ctx context.Context, in *GetOptOrderReplenishListRequest, opts ...grpc.CallOption) (*GetOptOrderReplenishListResponse, error)
	GetOptOrderReplenishData(ctx context.Context, in *GetOptOrderReplenishDataRequest, opts ...grpc.CallOption) (*GetOptOrderReplenishDataResponse, error)
	GetOptOrderColList(ctx context.Context, in *GetOptOrderColListRequest, opts ...grpc.CallOption) (*GetOptOrderColListResponse, error)
	GetOptOrderColData(ctx context.Context, in *GetOptOrderColDataRequest, opts ...grpc.CallOption) (*GetOptOrderColDataResponse, error)
	GetOptOrderPayList(ctx context.Context, in *GetOptOrderPayListRequest, opts ...grpc.CallOption) (*GetOptOrderPayListResponse, error)
	GetOptOrderPayData(ctx context.Context, in *GetOptOrderPayDataRequest, opts ...grpc.CallOption) (*GetOptOrderPayDataResponse, error)
	// ===================== 代理後台功能 =====================
	// 報表
	// < 即時更新 >
	GetAgReportChange(ctx context.Context, in *GetAgReportChangeRequest, opts ...grpc.CallOption) (*GetAgReportChangeResponse, error)
	// < 過帳更新 >
	GetAgReportResult(ctx context.Context, in *GetAgReportResultRequest, opts ...grpc.CallOption) (*GetAgReportResultResponse, error)
	// 訂單
	GetAgOrderBalanceList(ctx context.Context, in *GetAgOrderBalanceListRequest, opts ...grpc.CallOption) (*GetAgOrderBalanceListResponse, error)
	GetAgOrderCashList(ctx context.Context, in *GetAgOrderCashListRequest, opts ...grpc.CallOption) (*GetAgOrderCashListResponse, error)
	GetAgOrderCashData(ctx context.Context, in *GetAgOrderCashDataRequest, opts ...grpc.CallOption) (*GetAgOrderCashDataResponse, error)
	// ===================== 商戶後台功能 =====================
	// 報表
	// < 即時更新 >
	GetMerReportChange(ctx context.Context, in *GetMerReportChangeRequest, opts ...grpc.CallOption) (*GetMerReportChangeResponse, error)
	// < 過帳更新 >
	GetMerReportResult(ctx context.Context, in *GetMerReportResultRequest, opts ...grpc.CallOption) (*GetMerReportResultResponse, error)
	// 訂單
	GetMerOrderBalanceList(ctx context.Context, in *GetMerOrderBalanceListRequest, opts ...grpc.CallOption) (*GetMerOrderBalanceListResponse, error)
	GetMerOrderColList(ctx context.Context, in *GetMerOrderColListRequest, opts ...grpc.CallOption) (*GetMerOrderColListResponse, error)
	GetMerOrderColData(ctx context.Context, in *GetMerOrderColDataRequest, opts ...grpc.CallOption) (*GetMerOrderColDataResponse, error)
	GetMerOrderPayList(ctx context.Context, in *GetMerOrderPayListRequest, opts ...grpc.CallOption) (*GetMerOrderPayListResponse, error)
	GetMerOrderPayData(ctx context.Context, in *GetMerOrderPayDataRequest, opts ...grpc.CallOption) (*GetMerOrderPayDataResponse, error)
	// ===================== 蜜蜂後台功能 =====================
	// 報表
	// < 即時更新 >
	GetBeeReportChange(ctx context.Context, in *GetBeeReportChangeRequest, opts ...grpc.CallOption) (*GetBeeReportChangeResponse, error)
	GetBeeReportChangeDetail(ctx context.Context, in *GetBeeReportChangeDetailRequest, opts ...grpc.CallOption) (*GetBeeReportChangeDetailResponse, error)
	// 訂單
	GetBeeOrderBalanceList(ctx context.Context, in *GetBeeOrderBalanceListRequest, opts ...grpc.CallOption) (*GetBeeOrderBalanceListResponse, error)
	GetBeeOrderInList(ctx context.Context, in *GetBeeOrderInListRequest, opts ...grpc.CallOption) (*GetBeeOrderInListResponse, error)
	GetBeeOrderInData(ctx context.Context, in *GetBeeOrderInDataRequest, opts ...grpc.CallOption) (*GetBeeOrderInDataResponse, error)
	GetBeeOrderOutList(ctx context.Context, in *GetBeeOrderOutListRequest, opts ...grpc.CallOption) (*GetBeeOrderOutListResponse, error)
	GetBeeOrderOutData(ctx context.Context, in *GetBeeOrderOutDataRequest, opts ...grpc.CallOption) (*GetBeeOrderOutDataResponse, error)
	GetBeeOrderLatelyList(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GetBeeOrderLatelyListResponse, error)
	GetBeeOrderList(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GetBeeOrderListResponse, error)
	// ===================== 排程使用 =====================
	Cron(ctx context.Context, in *CronRequest, opts ...grpc.CallOption) (*CronResponse, error)
}

type camilaServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCamilaServiceClient(cc grpc.ClientConnInterface) CamilaServiceClient {
	return &camilaServiceClient{cc}
}

func (c *camilaServiceClient) GetAdminIndex(ctx context.Context, in *GetAdminIndexRequest, opts ...grpc.CallOption) (*GetAdminIndexResponse, error) {
	out := new(GetAdminIndexResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetAdminIndex_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetAdminBigData(ctx context.Context, in *GetAdminBigDataRequest, opts ...grpc.CallOption) (*GetAdminBigDataResponse, error) {
	out := new(GetAdminBigDataResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetAdminBigData_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetOptReportChange(ctx context.Context, in *GetOptReportChangeRequest, opts ...grpc.CallOption) (*GetOptReportChangeResponse, error) {
	out := new(GetOptReportChangeResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetOptReportChange_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetOptReportAgentChange(ctx context.Context, in *GetOptReportAgentChangeRequest, opts ...grpc.CallOption) (*GetOptReportAgentChangeResponse, error) {
	out := new(GetOptReportAgentChangeResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetOptReportAgentChange_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetOptReportMerchantChange(ctx context.Context, in *GetOptReportMerchantChangeRequest, opts ...grpc.CallOption) (*GetOptReportMerchantChangeResponse, error) {
	out := new(GetOptReportMerchantChangeResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetOptReportMerchantChange_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetOptReportBeeChange(ctx context.Context, in *GetOptReportBeeChangeRequest, opts ...grpc.CallOption) (*GetOptReportBeeChangeResponse, error) {
	out := new(GetOptReportBeeChangeResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetOptReportBeeChange_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetOptReportBalance(ctx context.Context, in *GetOptReportBalanceRequest, opts ...grpc.CallOption) (*GetOptReportBalanceResponse, error) {
	out := new(GetOptReportBalanceResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetOptReportBalance_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetOptReportResultBee(ctx context.Context, in *GetOptReportResultBeeRequest, opts ...grpc.CallOption) (*GetOptReportResultBeeResponse, error) {
	out := new(GetOptReportResultBeeResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetOptReportResultBee_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetOptReportBeeNoPay(ctx context.Context, in *GetOptReportBeeNoPayRequest, opts ...grpc.CallOption) (*GetOptReportBeeNoPayResponse, error) {
	out := new(GetOptReportBeeNoPayResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetOptReportBeeNoPay_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetOptReportAgent(ctx context.Context, in *GetOptReportAgentRequest, opts ...grpc.CallOption) (*GetOptReportAgentResponse, error) {
	out := new(GetOptReportAgentResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetOptReportAgent_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetOptReportAgentMer(ctx context.Context, in *GetOptReportAgentMerRequest, opts ...grpc.CallOption) (*GetOptReportAgentMerResponse, error) {
	out := new(GetOptReportAgentMerResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetOptReportAgentMer_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetOptReportMerchant(ctx context.Context, in *GetOptReportMerchantRequest, opts ...grpc.CallOption) (*GetOptReportMerchantResponse, error) {
	out := new(GetOptReportMerchantResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetOptReportMerchant_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetOptReportMerchantPayment(ctx context.Context, in *GetOptReportMerchantPaymentRequest, opts ...grpc.CallOption) (*GetOptReportMerchantPaymentResponse, error) {
	out := new(GetOptReportMerchantPaymentResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetOptReportMerchantPayment_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetOptReportProfit(ctx context.Context, in *GetOptReportProfitRequest, opts ...grpc.CallOption) (*GetOptReportProfitResponse, error) {
	out := new(GetOptReportProfitResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetOptReportProfit_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetOptReportCustomer(ctx context.Context, in *GetOptReportCustomerRequest, opts ...grpc.CallOption) (*GetOptReportCustomerResponse, error) {
	out := new(GetOptReportCustomerResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetOptReportCustomer_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetOptReportPayment(ctx context.Context, in *GetOptReportPaymentRequest, opts ...grpc.CallOption) (*GetOptReportPaymentResponse, error) {
	out := new(GetOptReportPaymentResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetOptReportPayment_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetOptReportView(ctx context.Context, in *GetOptReportViewRequest, opts ...grpc.CallOption) (*GetOptReportViewResponse, error) {
	out := new(GetOptReportViewResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetOptReportView_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetOptOrderBalanceList(ctx context.Context, in *GetOptOrderBalanceListRequest, opts ...grpc.CallOption) (*GetOptOrderBalanceListResponse, error) {
	out := new(GetOptOrderBalanceListResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetOptOrderBalanceList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetOptOrderManualList(ctx context.Context, in *GetOptOrderManualListRequest, opts ...grpc.CallOption) (*GetOptOrderManualListResponse, error) {
	out := new(GetOptOrderManualListResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetOptOrderManualList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetOptOrderReplenishList(ctx context.Context, in *GetOptOrderReplenishListRequest, opts ...grpc.CallOption) (*GetOptOrderReplenishListResponse, error) {
	out := new(GetOptOrderReplenishListResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetOptOrderReplenishList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetOptOrderReplenishData(ctx context.Context, in *GetOptOrderReplenishDataRequest, opts ...grpc.CallOption) (*GetOptOrderReplenishDataResponse, error) {
	out := new(GetOptOrderReplenishDataResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetOptOrderReplenishData_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetOptOrderColList(ctx context.Context, in *GetOptOrderColListRequest, opts ...grpc.CallOption) (*GetOptOrderColListResponse, error) {
	out := new(GetOptOrderColListResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetOptOrderColList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetOptOrderColData(ctx context.Context, in *GetOptOrderColDataRequest, opts ...grpc.CallOption) (*GetOptOrderColDataResponse, error) {
	out := new(GetOptOrderColDataResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetOptOrderColData_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetOptOrderPayList(ctx context.Context, in *GetOptOrderPayListRequest, opts ...grpc.CallOption) (*GetOptOrderPayListResponse, error) {
	out := new(GetOptOrderPayListResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetOptOrderPayList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetOptOrderPayData(ctx context.Context, in *GetOptOrderPayDataRequest, opts ...grpc.CallOption) (*GetOptOrderPayDataResponse, error) {
	out := new(GetOptOrderPayDataResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetOptOrderPayData_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetAgReportChange(ctx context.Context, in *GetAgReportChangeRequest, opts ...grpc.CallOption) (*GetAgReportChangeResponse, error) {
	out := new(GetAgReportChangeResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetAgReportChange_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetAgReportResult(ctx context.Context, in *GetAgReportResultRequest, opts ...grpc.CallOption) (*GetAgReportResultResponse, error) {
	out := new(GetAgReportResultResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetAgReportResult_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetAgOrderBalanceList(ctx context.Context, in *GetAgOrderBalanceListRequest, opts ...grpc.CallOption) (*GetAgOrderBalanceListResponse, error) {
	out := new(GetAgOrderBalanceListResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetAgOrderBalanceList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetAgOrderCashList(ctx context.Context, in *GetAgOrderCashListRequest, opts ...grpc.CallOption) (*GetAgOrderCashListResponse, error) {
	out := new(GetAgOrderCashListResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetAgOrderCashList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetAgOrderCashData(ctx context.Context, in *GetAgOrderCashDataRequest, opts ...grpc.CallOption) (*GetAgOrderCashDataResponse, error) {
	out := new(GetAgOrderCashDataResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetAgOrderCashData_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetMerReportChange(ctx context.Context, in *GetMerReportChangeRequest, opts ...grpc.CallOption) (*GetMerReportChangeResponse, error) {
	out := new(GetMerReportChangeResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetMerReportChange_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetMerReportResult(ctx context.Context, in *GetMerReportResultRequest, opts ...grpc.CallOption) (*GetMerReportResultResponse, error) {
	out := new(GetMerReportResultResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetMerReportResult_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetMerOrderBalanceList(ctx context.Context, in *GetMerOrderBalanceListRequest, opts ...grpc.CallOption) (*GetMerOrderBalanceListResponse, error) {
	out := new(GetMerOrderBalanceListResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetMerOrderBalanceList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetMerOrderColList(ctx context.Context, in *GetMerOrderColListRequest, opts ...grpc.CallOption) (*GetMerOrderColListResponse, error) {
	out := new(GetMerOrderColListResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetMerOrderColList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetMerOrderColData(ctx context.Context, in *GetMerOrderColDataRequest, opts ...grpc.CallOption) (*GetMerOrderColDataResponse, error) {
	out := new(GetMerOrderColDataResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetMerOrderColData_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetMerOrderPayList(ctx context.Context, in *GetMerOrderPayListRequest, opts ...grpc.CallOption) (*GetMerOrderPayListResponse, error) {
	out := new(GetMerOrderPayListResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetMerOrderPayList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetMerOrderPayData(ctx context.Context, in *GetMerOrderPayDataRequest, opts ...grpc.CallOption) (*GetMerOrderPayDataResponse, error) {
	out := new(GetMerOrderPayDataResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetMerOrderPayData_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetBeeReportChange(ctx context.Context, in *GetBeeReportChangeRequest, opts ...grpc.CallOption) (*GetBeeReportChangeResponse, error) {
	out := new(GetBeeReportChangeResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetBeeReportChange_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetBeeReportChangeDetail(ctx context.Context, in *GetBeeReportChangeDetailRequest, opts ...grpc.CallOption) (*GetBeeReportChangeDetailResponse, error) {
	out := new(GetBeeReportChangeDetailResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetBeeReportChangeDetail_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetBeeOrderBalanceList(ctx context.Context, in *GetBeeOrderBalanceListRequest, opts ...grpc.CallOption) (*GetBeeOrderBalanceListResponse, error) {
	out := new(GetBeeOrderBalanceListResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetBeeOrderBalanceList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetBeeOrderInList(ctx context.Context, in *GetBeeOrderInListRequest, opts ...grpc.CallOption) (*GetBeeOrderInListResponse, error) {
	out := new(GetBeeOrderInListResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetBeeOrderInList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetBeeOrderInData(ctx context.Context, in *GetBeeOrderInDataRequest, opts ...grpc.CallOption) (*GetBeeOrderInDataResponse, error) {
	out := new(GetBeeOrderInDataResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetBeeOrderInData_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetBeeOrderOutList(ctx context.Context, in *GetBeeOrderOutListRequest, opts ...grpc.CallOption) (*GetBeeOrderOutListResponse, error) {
	out := new(GetBeeOrderOutListResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetBeeOrderOutList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetBeeOrderOutData(ctx context.Context, in *GetBeeOrderOutDataRequest, opts ...grpc.CallOption) (*GetBeeOrderOutDataResponse, error) {
	out := new(GetBeeOrderOutDataResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetBeeOrderOutData_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetBeeOrderLatelyList(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GetBeeOrderLatelyListResponse, error) {
	out := new(GetBeeOrderLatelyListResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetBeeOrderLatelyList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) GetBeeOrderList(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GetBeeOrderListResponse, error) {
	out := new(GetBeeOrderListResponse)
	err := c.cc.Invoke(ctx, CamilaService_GetBeeOrderList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *camilaServiceClient) Cron(ctx context.Context, in *CronRequest, opts ...grpc.CallOption) (*CronResponse, error) {
	out := new(CronResponse)
	err := c.cc.Invoke(ctx, CamilaService_Cron_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CamilaServiceServer is the server API for CamilaService service.
// All implementations must embed UnimplementedCamilaServiceServer
// for forward compatibility
type CamilaServiceServer interface {
	// 總控後台
	GetAdminIndex(context.Context, *GetAdminIndexRequest) (*GetAdminIndexResponse, error)
	GetAdminBigData(context.Context, *GetAdminBigDataRequest) (*GetAdminBigDataResponse, error)
	// ==================== 運營員後台功能 ====================
	// 報表
	// < 即時更新 >
	GetOptReportChange(context.Context, *GetOptReportChangeRequest) (*GetOptReportChangeResponse, error)
	GetOptReportAgentChange(context.Context, *GetOptReportAgentChangeRequest) (*GetOptReportAgentChangeResponse, error)
	GetOptReportMerchantChange(context.Context, *GetOptReportMerchantChangeRequest) (*GetOptReportMerchantChangeResponse, error)
	GetOptReportBeeChange(context.Context, *GetOptReportBeeChangeRequest) (*GetOptReportBeeChangeResponse, error)
	GetOptReportBalance(context.Context, *GetOptReportBalanceRequest) (*GetOptReportBalanceResponse, error)
	GetOptReportResultBee(context.Context, *GetOptReportResultBeeRequest) (*GetOptReportResultBeeResponse, error)
	GetOptReportBeeNoPay(context.Context, *GetOptReportBeeNoPayRequest) (*GetOptReportBeeNoPayResponse, error)
	// < 過帳更新 >
	GetOptReportAgent(context.Context, *GetOptReportAgentRequest) (*GetOptReportAgentResponse, error)
	GetOptReportAgentMer(context.Context, *GetOptReportAgentMerRequest) (*GetOptReportAgentMerResponse, error)
	GetOptReportMerchant(context.Context, *GetOptReportMerchantRequest) (*GetOptReportMerchantResponse, error)
	GetOptReportMerchantPayment(context.Context, *GetOptReportMerchantPaymentRequest) (*GetOptReportMerchantPaymentResponse, error)
	// 蜜蜂報表
	GetOptReportProfit(context.Context, *GetOptReportProfitRequest) (*GetOptReportProfitResponse, error)
	GetOptReportCustomer(context.Context, *GetOptReportCustomerRequest) (*GetOptReportCustomerResponse, error)
	GetOptReportPayment(context.Context, *GetOptReportPaymentRequest) (*GetOptReportPaymentResponse, error)
	GetOptReportView(context.Context, *GetOptReportViewRequest) (*GetOptReportViewResponse, error)
	// 訂單
	GetOptOrderBalanceList(context.Context, *GetOptOrderBalanceListRequest) (*GetOptOrderBalanceListResponse, error)
	GetOptOrderManualList(context.Context, *GetOptOrderManualListRequest) (*GetOptOrderManualListResponse, error)
	GetOptOrderReplenishList(context.Context, *GetOptOrderReplenishListRequest) (*GetOptOrderReplenishListResponse, error)
	GetOptOrderReplenishData(context.Context, *GetOptOrderReplenishDataRequest) (*GetOptOrderReplenishDataResponse, error)
	GetOptOrderColList(context.Context, *GetOptOrderColListRequest) (*GetOptOrderColListResponse, error)
	GetOptOrderColData(context.Context, *GetOptOrderColDataRequest) (*GetOptOrderColDataResponse, error)
	GetOptOrderPayList(context.Context, *GetOptOrderPayListRequest) (*GetOptOrderPayListResponse, error)
	GetOptOrderPayData(context.Context, *GetOptOrderPayDataRequest) (*GetOptOrderPayDataResponse, error)
	// ===================== 代理後台功能 =====================
	// 報表
	// < 即時更新 >
	GetAgReportChange(context.Context, *GetAgReportChangeRequest) (*GetAgReportChangeResponse, error)
	// < 過帳更新 >
	GetAgReportResult(context.Context, *GetAgReportResultRequest) (*GetAgReportResultResponse, error)
	// 訂單
	GetAgOrderBalanceList(context.Context, *GetAgOrderBalanceListRequest) (*GetAgOrderBalanceListResponse, error)
	GetAgOrderCashList(context.Context, *GetAgOrderCashListRequest) (*GetAgOrderCashListResponse, error)
	GetAgOrderCashData(context.Context, *GetAgOrderCashDataRequest) (*GetAgOrderCashDataResponse, error)
	// ===================== 商戶後台功能 =====================
	// 報表
	// < 即時更新 >
	GetMerReportChange(context.Context, *GetMerReportChangeRequest) (*GetMerReportChangeResponse, error)
	// < 過帳更新 >
	GetMerReportResult(context.Context, *GetMerReportResultRequest) (*GetMerReportResultResponse, error)
	// 訂單
	GetMerOrderBalanceList(context.Context, *GetMerOrderBalanceListRequest) (*GetMerOrderBalanceListResponse, error)
	GetMerOrderColList(context.Context, *GetMerOrderColListRequest) (*GetMerOrderColListResponse, error)
	GetMerOrderColData(context.Context, *GetMerOrderColDataRequest) (*GetMerOrderColDataResponse, error)
	GetMerOrderPayList(context.Context, *GetMerOrderPayListRequest) (*GetMerOrderPayListResponse, error)
	GetMerOrderPayData(context.Context, *GetMerOrderPayDataRequest) (*GetMerOrderPayDataResponse, error)
	// ===================== 蜜蜂後台功能 =====================
	// 報表
	// < 即時更新 >
	GetBeeReportChange(context.Context, *GetBeeReportChangeRequest) (*GetBeeReportChangeResponse, error)
	GetBeeReportChangeDetail(context.Context, *GetBeeReportChangeDetailRequest) (*GetBeeReportChangeDetailResponse, error)
	// 訂單
	GetBeeOrderBalanceList(context.Context, *GetBeeOrderBalanceListRequest) (*GetBeeOrderBalanceListResponse, error)
	GetBeeOrderInList(context.Context, *GetBeeOrderInListRequest) (*GetBeeOrderInListResponse, error)
	GetBeeOrderInData(context.Context, *GetBeeOrderInDataRequest) (*GetBeeOrderInDataResponse, error)
	GetBeeOrderOutList(context.Context, *GetBeeOrderOutListRequest) (*GetBeeOrderOutListResponse, error)
	GetBeeOrderOutData(context.Context, *GetBeeOrderOutDataRequest) (*GetBeeOrderOutDataResponse, error)
	GetBeeOrderLatelyList(context.Context, *EmptyRequest) (*GetBeeOrderLatelyListResponse, error)
	GetBeeOrderList(context.Context, *EmptyRequest) (*GetBeeOrderListResponse, error)
	// ===================== 排程使用 =====================
	Cron(context.Context, *CronRequest) (*CronResponse, error)
	mustEmbedUnimplementedCamilaServiceServer()
}

// UnimplementedCamilaServiceServer must be embedded to have forward compatible implementations.
type UnimplementedCamilaServiceServer struct {
}

func (UnimplementedCamilaServiceServer) GetAdminIndex(context.Context, *GetAdminIndexRequest) (*GetAdminIndexResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAdminIndex not implemented")
}
func (UnimplementedCamilaServiceServer) GetAdminBigData(context.Context, *GetAdminBigDataRequest) (*GetAdminBigDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAdminBigData not implemented")
}
func (UnimplementedCamilaServiceServer) GetOptReportChange(context.Context, *GetOptReportChangeRequest) (*GetOptReportChangeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOptReportChange not implemented")
}
func (UnimplementedCamilaServiceServer) GetOptReportAgentChange(context.Context, *GetOptReportAgentChangeRequest) (*GetOptReportAgentChangeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOptReportAgentChange not implemented")
}
func (UnimplementedCamilaServiceServer) GetOptReportMerchantChange(context.Context, *GetOptReportMerchantChangeRequest) (*GetOptReportMerchantChangeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOptReportMerchantChange not implemented")
}
func (UnimplementedCamilaServiceServer) GetOptReportBeeChange(context.Context, *GetOptReportBeeChangeRequest) (*GetOptReportBeeChangeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOptReportBeeChange not implemented")
}
func (UnimplementedCamilaServiceServer) GetOptReportBalance(context.Context, *GetOptReportBalanceRequest) (*GetOptReportBalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOptReportBalance not implemented")
}
func (UnimplementedCamilaServiceServer) GetOptReportResultBee(context.Context, *GetOptReportResultBeeRequest) (*GetOptReportResultBeeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOptReportResultBee not implemented")
}
func (UnimplementedCamilaServiceServer) GetOptReportBeeNoPay(context.Context, *GetOptReportBeeNoPayRequest) (*GetOptReportBeeNoPayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOptReportBeeNoPay not implemented")
}
func (UnimplementedCamilaServiceServer) GetOptReportAgent(context.Context, *GetOptReportAgentRequest) (*GetOptReportAgentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOptReportAgent not implemented")
}
func (UnimplementedCamilaServiceServer) GetOptReportAgentMer(context.Context, *GetOptReportAgentMerRequest) (*GetOptReportAgentMerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOptReportAgentMer not implemented")
}
func (UnimplementedCamilaServiceServer) GetOptReportMerchant(context.Context, *GetOptReportMerchantRequest) (*GetOptReportMerchantResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOptReportMerchant not implemented")
}
func (UnimplementedCamilaServiceServer) GetOptReportMerchantPayment(context.Context, *GetOptReportMerchantPaymentRequest) (*GetOptReportMerchantPaymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOptReportMerchantPayment not implemented")
}
func (UnimplementedCamilaServiceServer) GetOptReportProfit(context.Context, *GetOptReportProfitRequest) (*GetOptReportProfitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOptReportProfit not implemented")
}
func (UnimplementedCamilaServiceServer) GetOptReportCustomer(context.Context, *GetOptReportCustomerRequest) (*GetOptReportCustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOptReportCustomer not implemented")
}
func (UnimplementedCamilaServiceServer) GetOptReportPayment(context.Context, *GetOptReportPaymentRequest) (*GetOptReportPaymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOptReportPayment not implemented")
}
func (UnimplementedCamilaServiceServer) GetOptReportView(context.Context, *GetOptReportViewRequest) (*GetOptReportViewResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOptReportView not implemented")
}
func (UnimplementedCamilaServiceServer) GetOptOrderBalanceList(context.Context, *GetOptOrderBalanceListRequest) (*GetOptOrderBalanceListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOptOrderBalanceList not implemented")
}
func (UnimplementedCamilaServiceServer) GetOptOrderManualList(context.Context, *GetOptOrderManualListRequest) (*GetOptOrderManualListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOptOrderManualList not implemented")
}
func (UnimplementedCamilaServiceServer) GetOptOrderReplenishList(context.Context, *GetOptOrderReplenishListRequest) (*GetOptOrderReplenishListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOptOrderReplenishList not implemented")
}
func (UnimplementedCamilaServiceServer) GetOptOrderReplenishData(context.Context, *GetOptOrderReplenishDataRequest) (*GetOptOrderReplenishDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOptOrderReplenishData not implemented")
}
func (UnimplementedCamilaServiceServer) GetOptOrderColList(context.Context, *GetOptOrderColListRequest) (*GetOptOrderColListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOptOrderColList not implemented")
}
func (UnimplementedCamilaServiceServer) GetOptOrderColData(context.Context, *GetOptOrderColDataRequest) (*GetOptOrderColDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOptOrderColData not implemented")
}
func (UnimplementedCamilaServiceServer) GetOptOrderPayList(context.Context, *GetOptOrderPayListRequest) (*GetOptOrderPayListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOptOrderPayList not implemented")
}
func (UnimplementedCamilaServiceServer) GetOptOrderPayData(context.Context, *GetOptOrderPayDataRequest) (*GetOptOrderPayDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOptOrderPayData not implemented")
}
func (UnimplementedCamilaServiceServer) GetAgReportChange(context.Context, *GetAgReportChangeRequest) (*GetAgReportChangeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAgReportChange not implemented")
}
func (UnimplementedCamilaServiceServer) GetAgReportResult(context.Context, *GetAgReportResultRequest) (*GetAgReportResultResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAgReportResult not implemented")
}
func (UnimplementedCamilaServiceServer) GetAgOrderBalanceList(context.Context, *GetAgOrderBalanceListRequest) (*GetAgOrderBalanceListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAgOrderBalanceList not implemented")
}
func (UnimplementedCamilaServiceServer) GetAgOrderCashList(context.Context, *GetAgOrderCashListRequest) (*GetAgOrderCashListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAgOrderCashList not implemented")
}
func (UnimplementedCamilaServiceServer) GetAgOrderCashData(context.Context, *GetAgOrderCashDataRequest) (*GetAgOrderCashDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAgOrderCashData not implemented")
}
func (UnimplementedCamilaServiceServer) GetMerReportChange(context.Context, *GetMerReportChangeRequest) (*GetMerReportChangeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMerReportChange not implemented")
}
func (UnimplementedCamilaServiceServer) GetMerReportResult(context.Context, *GetMerReportResultRequest) (*GetMerReportResultResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMerReportResult not implemented")
}
func (UnimplementedCamilaServiceServer) GetMerOrderBalanceList(context.Context, *GetMerOrderBalanceListRequest) (*GetMerOrderBalanceListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMerOrderBalanceList not implemented")
}
func (UnimplementedCamilaServiceServer) GetMerOrderColList(context.Context, *GetMerOrderColListRequest) (*GetMerOrderColListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMerOrderColList not implemented")
}
func (UnimplementedCamilaServiceServer) GetMerOrderColData(context.Context, *GetMerOrderColDataRequest) (*GetMerOrderColDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMerOrderColData not implemented")
}
func (UnimplementedCamilaServiceServer) GetMerOrderPayList(context.Context, *GetMerOrderPayListRequest) (*GetMerOrderPayListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMerOrderPayList not implemented")
}
func (UnimplementedCamilaServiceServer) GetMerOrderPayData(context.Context, *GetMerOrderPayDataRequest) (*GetMerOrderPayDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMerOrderPayData not implemented")
}
func (UnimplementedCamilaServiceServer) GetBeeReportChange(context.Context, *GetBeeReportChangeRequest) (*GetBeeReportChangeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBeeReportChange not implemented")
}
func (UnimplementedCamilaServiceServer) GetBeeReportChangeDetail(context.Context, *GetBeeReportChangeDetailRequest) (*GetBeeReportChangeDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBeeReportChangeDetail not implemented")
}
func (UnimplementedCamilaServiceServer) GetBeeOrderBalanceList(context.Context, *GetBeeOrderBalanceListRequest) (*GetBeeOrderBalanceListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBeeOrderBalanceList not implemented")
}
func (UnimplementedCamilaServiceServer) GetBeeOrderInList(context.Context, *GetBeeOrderInListRequest) (*GetBeeOrderInListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBeeOrderInList not implemented")
}
func (UnimplementedCamilaServiceServer) GetBeeOrderInData(context.Context, *GetBeeOrderInDataRequest) (*GetBeeOrderInDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBeeOrderInData not implemented")
}
func (UnimplementedCamilaServiceServer) GetBeeOrderOutList(context.Context, *GetBeeOrderOutListRequest) (*GetBeeOrderOutListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBeeOrderOutList not implemented")
}
func (UnimplementedCamilaServiceServer) GetBeeOrderOutData(context.Context, *GetBeeOrderOutDataRequest) (*GetBeeOrderOutDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBeeOrderOutData not implemented")
}
func (UnimplementedCamilaServiceServer) GetBeeOrderLatelyList(context.Context, *EmptyRequest) (*GetBeeOrderLatelyListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBeeOrderLatelyList not implemented")
}
func (UnimplementedCamilaServiceServer) GetBeeOrderList(context.Context, *EmptyRequest) (*GetBeeOrderListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBeeOrderList not implemented")
}
func (UnimplementedCamilaServiceServer) Cron(context.Context, *CronRequest) (*CronResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Cron not implemented")
}
func (UnimplementedCamilaServiceServer) mustEmbedUnimplementedCamilaServiceServer() {}

// UnsafeCamilaServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CamilaServiceServer will
// result in compilation errors.
type UnsafeCamilaServiceServer interface {
	mustEmbedUnimplementedCamilaServiceServer()
}

func RegisterCamilaServiceServer(s grpc.ServiceRegistrar, srv CamilaServiceServer) {
	s.RegisterService(&CamilaService_ServiceDesc, srv)
}

func _CamilaService_GetAdminIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAdminIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetAdminIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetAdminIndex_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetAdminIndex(ctx, req.(*GetAdminIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetAdminBigData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAdminBigDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetAdminBigData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetAdminBigData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetAdminBigData(ctx, req.(*GetAdminBigDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetOptReportChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOptReportChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetOptReportChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetOptReportChange_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetOptReportChange(ctx, req.(*GetOptReportChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetOptReportAgentChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOptReportAgentChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetOptReportAgentChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetOptReportAgentChange_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetOptReportAgentChange(ctx, req.(*GetOptReportAgentChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetOptReportMerchantChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOptReportMerchantChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetOptReportMerchantChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetOptReportMerchantChange_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetOptReportMerchantChange(ctx, req.(*GetOptReportMerchantChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetOptReportBeeChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOptReportBeeChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetOptReportBeeChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetOptReportBeeChange_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetOptReportBeeChange(ctx, req.(*GetOptReportBeeChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetOptReportBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOptReportBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetOptReportBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetOptReportBalance_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetOptReportBalance(ctx, req.(*GetOptReportBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetOptReportResultBee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOptReportResultBeeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetOptReportResultBee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetOptReportResultBee_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetOptReportResultBee(ctx, req.(*GetOptReportResultBeeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetOptReportBeeNoPay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOptReportBeeNoPayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetOptReportBeeNoPay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetOptReportBeeNoPay_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetOptReportBeeNoPay(ctx, req.(*GetOptReportBeeNoPayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetOptReportAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOptReportAgentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetOptReportAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetOptReportAgent_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetOptReportAgent(ctx, req.(*GetOptReportAgentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetOptReportAgentMer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOptReportAgentMerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetOptReportAgentMer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetOptReportAgentMer_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetOptReportAgentMer(ctx, req.(*GetOptReportAgentMerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetOptReportMerchant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOptReportMerchantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetOptReportMerchant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetOptReportMerchant_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetOptReportMerchant(ctx, req.(*GetOptReportMerchantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetOptReportMerchantPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOptReportMerchantPaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetOptReportMerchantPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetOptReportMerchantPayment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetOptReportMerchantPayment(ctx, req.(*GetOptReportMerchantPaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetOptReportProfit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOptReportProfitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetOptReportProfit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetOptReportProfit_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetOptReportProfit(ctx, req.(*GetOptReportProfitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetOptReportCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOptReportCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetOptReportCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetOptReportCustomer_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetOptReportCustomer(ctx, req.(*GetOptReportCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetOptReportPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOptReportPaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetOptReportPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetOptReportPayment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetOptReportPayment(ctx, req.(*GetOptReportPaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetOptReportView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOptReportViewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetOptReportView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetOptReportView_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetOptReportView(ctx, req.(*GetOptReportViewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetOptOrderBalanceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOptOrderBalanceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetOptOrderBalanceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetOptOrderBalanceList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetOptOrderBalanceList(ctx, req.(*GetOptOrderBalanceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetOptOrderManualList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOptOrderManualListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetOptOrderManualList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetOptOrderManualList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetOptOrderManualList(ctx, req.(*GetOptOrderManualListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetOptOrderReplenishList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOptOrderReplenishListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetOptOrderReplenishList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetOptOrderReplenishList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetOptOrderReplenishList(ctx, req.(*GetOptOrderReplenishListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetOptOrderReplenishData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOptOrderReplenishDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetOptOrderReplenishData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetOptOrderReplenishData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetOptOrderReplenishData(ctx, req.(*GetOptOrderReplenishDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetOptOrderColList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOptOrderColListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetOptOrderColList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetOptOrderColList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetOptOrderColList(ctx, req.(*GetOptOrderColListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetOptOrderColData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOptOrderColDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetOptOrderColData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetOptOrderColData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetOptOrderColData(ctx, req.(*GetOptOrderColDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetOptOrderPayList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOptOrderPayListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetOptOrderPayList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetOptOrderPayList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetOptOrderPayList(ctx, req.(*GetOptOrderPayListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetOptOrderPayData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOptOrderPayDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetOptOrderPayData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetOptOrderPayData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetOptOrderPayData(ctx, req.(*GetOptOrderPayDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetAgReportChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAgReportChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetAgReportChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetAgReportChange_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetAgReportChange(ctx, req.(*GetAgReportChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetAgReportResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAgReportResultRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetAgReportResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetAgReportResult_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetAgReportResult(ctx, req.(*GetAgReportResultRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetAgOrderBalanceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAgOrderBalanceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetAgOrderBalanceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetAgOrderBalanceList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetAgOrderBalanceList(ctx, req.(*GetAgOrderBalanceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetAgOrderCashList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAgOrderCashListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetAgOrderCashList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetAgOrderCashList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetAgOrderCashList(ctx, req.(*GetAgOrderCashListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetAgOrderCashData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAgOrderCashDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetAgOrderCashData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetAgOrderCashData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetAgOrderCashData(ctx, req.(*GetAgOrderCashDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetMerReportChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMerReportChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetMerReportChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetMerReportChange_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetMerReportChange(ctx, req.(*GetMerReportChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetMerReportResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMerReportResultRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetMerReportResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetMerReportResult_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetMerReportResult(ctx, req.(*GetMerReportResultRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetMerOrderBalanceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMerOrderBalanceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetMerOrderBalanceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetMerOrderBalanceList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetMerOrderBalanceList(ctx, req.(*GetMerOrderBalanceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetMerOrderColList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMerOrderColListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetMerOrderColList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetMerOrderColList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetMerOrderColList(ctx, req.(*GetMerOrderColListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetMerOrderColData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMerOrderColDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetMerOrderColData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetMerOrderColData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetMerOrderColData(ctx, req.(*GetMerOrderColDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetMerOrderPayList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMerOrderPayListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetMerOrderPayList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetMerOrderPayList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetMerOrderPayList(ctx, req.(*GetMerOrderPayListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetMerOrderPayData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMerOrderPayDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetMerOrderPayData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetMerOrderPayData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetMerOrderPayData(ctx, req.(*GetMerOrderPayDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetBeeReportChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBeeReportChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetBeeReportChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetBeeReportChange_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetBeeReportChange(ctx, req.(*GetBeeReportChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetBeeReportChangeDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBeeReportChangeDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetBeeReportChangeDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetBeeReportChangeDetail_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetBeeReportChangeDetail(ctx, req.(*GetBeeReportChangeDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetBeeOrderBalanceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBeeOrderBalanceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetBeeOrderBalanceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetBeeOrderBalanceList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetBeeOrderBalanceList(ctx, req.(*GetBeeOrderBalanceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetBeeOrderInList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBeeOrderInListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetBeeOrderInList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetBeeOrderInList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetBeeOrderInList(ctx, req.(*GetBeeOrderInListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetBeeOrderInData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBeeOrderInDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetBeeOrderInData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetBeeOrderInData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetBeeOrderInData(ctx, req.(*GetBeeOrderInDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetBeeOrderOutList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBeeOrderOutListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetBeeOrderOutList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetBeeOrderOutList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetBeeOrderOutList(ctx, req.(*GetBeeOrderOutListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetBeeOrderOutData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBeeOrderOutDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetBeeOrderOutData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetBeeOrderOutData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetBeeOrderOutData(ctx, req.(*GetBeeOrderOutDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetBeeOrderLatelyList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetBeeOrderLatelyList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetBeeOrderLatelyList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetBeeOrderLatelyList(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_GetBeeOrderList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).GetBeeOrderList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_GetBeeOrderList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).GetBeeOrderList(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CamilaService_Cron_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CronRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamilaServiceServer).Cron(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CamilaService_Cron_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamilaServiceServer).Cron(ctx, req.(*CronRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CamilaService_ServiceDesc is the grpc.ServiceDesc for CamilaService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CamilaService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "camila.camilaService",
	HandlerType: (*CamilaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAdminIndex",
			Handler:    _CamilaService_GetAdminIndex_Handler,
		},
		{
			MethodName: "GetAdminBigData",
			Handler:    _CamilaService_GetAdminBigData_Handler,
		},
		{
			MethodName: "GetOptReportChange",
			Handler:    _CamilaService_GetOptReportChange_Handler,
		},
		{
			MethodName: "GetOptReportAgentChange",
			Handler:    _CamilaService_GetOptReportAgentChange_Handler,
		},
		{
			MethodName: "GetOptReportMerchantChange",
			Handler:    _CamilaService_GetOptReportMerchantChange_Handler,
		},
		{
			MethodName: "GetOptReportBeeChange",
			Handler:    _CamilaService_GetOptReportBeeChange_Handler,
		},
		{
			MethodName: "GetOptReportBalance",
			Handler:    _CamilaService_GetOptReportBalance_Handler,
		},
		{
			MethodName: "GetOptReportResultBee",
			Handler:    _CamilaService_GetOptReportResultBee_Handler,
		},
		{
			MethodName: "GetOptReportBeeNoPay",
			Handler:    _CamilaService_GetOptReportBeeNoPay_Handler,
		},
		{
			MethodName: "GetOptReportAgent",
			Handler:    _CamilaService_GetOptReportAgent_Handler,
		},
		{
			MethodName: "GetOptReportAgentMer",
			Handler:    _CamilaService_GetOptReportAgentMer_Handler,
		},
		{
			MethodName: "GetOptReportMerchant",
			Handler:    _CamilaService_GetOptReportMerchant_Handler,
		},
		{
			MethodName: "GetOptReportMerchantPayment",
			Handler:    _CamilaService_GetOptReportMerchantPayment_Handler,
		},
		{
			MethodName: "GetOptReportProfit",
			Handler:    _CamilaService_GetOptReportProfit_Handler,
		},
		{
			MethodName: "GetOptReportCustomer",
			Handler:    _CamilaService_GetOptReportCustomer_Handler,
		},
		{
			MethodName: "GetOptReportPayment",
			Handler:    _CamilaService_GetOptReportPayment_Handler,
		},
		{
			MethodName: "GetOptReportView",
			Handler:    _CamilaService_GetOptReportView_Handler,
		},
		{
			MethodName: "GetOptOrderBalanceList",
			Handler:    _CamilaService_GetOptOrderBalanceList_Handler,
		},
		{
			MethodName: "GetOptOrderManualList",
			Handler:    _CamilaService_GetOptOrderManualList_Handler,
		},
		{
			MethodName: "GetOptOrderReplenishList",
			Handler:    _CamilaService_GetOptOrderReplenishList_Handler,
		},
		{
			MethodName: "GetOptOrderReplenishData",
			Handler:    _CamilaService_GetOptOrderReplenishData_Handler,
		},
		{
			MethodName: "GetOptOrderColList",
			Handler:    _CamilaService_GetOptOrderColList_Handler,
		},
		{
			MethodName: "GetOptOrderColData",
			Handler:    _CamilaService_GetOptOrderColData_Handler,
		},
		{
			MethodName: "GetOptOrderPayList",
			Handler:    _CamilaService_GetOptOrderPayList_Handler,
		},
		{
			MethodName: "GetOptOrderPayData",
			Handler:    _CamilaService_GetOptOrderPayData_Handler,
		},
		{
			MethodName: "GetAgReportChange",
			Handler:    _CamilaService_GetAgReportChange_Handler,
		},
		{
			MethodName: "GetAgReportResult",
			Handler:    _CamilaService_GetAgReportResult_Handler,
		},
		{
			MethodName: "GetAgOrderBalanceList",
			Handler:    _CamilaService_GetAgOrderBalanceList_Handler,
		},
		{
			MethodName: "GetAgOrderCashList",
			Handler:    _CamilaService_GetAgOrderCashList_Handler,
		},
		{
			MethodName: "GetAgOrderCashData",
			Handler:    _CamilaService_GetAgOrderCashData_Handler,
		},
		{
			MethodName: "GetMerReportChange",
			Handler:    _CamilaService_GetMerReportChange_Handler,
		},
		{
			MethodName: "GetMerReportResult",
			Handler:    _CamilaService_GetMerReportResult_Handler,
		},
		{
			MethodName: "GetMerOrderBalanceList",
			Handler:    _CamilaService_GetMerOrderBalanceList_Handler,
		},
		{
			MethodName: "GetMerOrderColList",
			Handler:    _CamilaService_GetMerOrderColList_Handler,
		},
		{
			MethodName: "GetMerOrderColData",
			Handler:    _CamilaService_GetMerOrderColData_Handler,
		},
		{
			MethodName: "GetMerOrderPayList",
			Handler:    _CamilaService_GetMerOrderPayList_Handler,
		},
		{
			MethodName: "GetMerOrderPayData",
			Handler:    _CamilaService_GetMerOrderPayData_Handler,
		},
		{
			MethodName: "GetBeeReportChange",
			Handler:    _CamilaService_GetBeeReportChange_Handler,
		},
		{
			MethodName: "GetBeeReportChangeDetail",
			Handler:    _CamilaService_GetBeeReportChangeDetail_Handler,
		},
		{
			MethodName: "GetBeeOrderBalanceList",
			Handler:    _CamilaService_GetBeeOrderBalanceList_Handler,
		},
		{
			MethodName: "GetBeeOrderInList",
			Handler:    _CamilaService_GetBeeOrderInList_Handler,
		},
		{
			MethodName: "GetBeeOrderInData",
			Handler:    _CamilaService_GetBeeOrderInData_Handler,
		},
		{
			MethodName: "GetBeeOrderOutList",
			Handler:    _CamilaService_GetBeeOrderOutList_Handler,
		},
		{
			MethodName: "GetBeeOrderOutData",
			Handler:    _CamilaService_GetBeeOrderOutData_Handler,
		},
		{
			MethodName: "GetBeeOrderLatelyList",
			Handler:    _CamilaService_GetBeeOrderLatelyList_Handler,
		},
		{
			MethodName: "GetBeeOrderList",
			Handler:    _CamilaService_GetBeeOrderList_Handler,
		},
		{
			MethodName: "Cron",
			Handler:    _CamilaService_Cron_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/proto/camila.proto",
}
